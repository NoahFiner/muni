.outer {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.app-container {
  height: 100dvh;
  width: 100%;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 0;
  margin: 0;
  overflow: hidden;
}

.top-bar {
  width: 100%;
  color: #ccc;
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
  text-align: left;
}

.card-header {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

.text-box {
  background-color: #2b2b2b;
  border-radius: 0.25rem;
  padding: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.5;
  margin-bottom: 1rem;
}

.chain-placeholder {
  width: 1.5rem;
  height: 6rem;
  background-color: #d97706;
  margin: 0 auto 1rem;
  border-radius: 0.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.button-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  font-size: 0.875rem;
  position: absolute;
  bottom: 54px;
  left: 60px;
  min-width: 80%;
  max-width: 80%;
}

.option-button {
  background-color: transparent;
  transform: rotate(-6deg);
  position: relative;
  width: auto;
  color: #fffac9;
  text-align: left;
  font-family: "Fuzzy Bubbles", sans-serif;
  width: 100%;
}

.option-button {
  outline: 0 !important;
  box-shadow: none !important;
  border: 0 !important;
}

.drawn-line {
  position: absolute;
  width: 100%;
  bottom: 0;
  left: 0;
}

.drawn-line > svg {
  width: 100%;
  height: 100%;
}

.muni-logo {
  margin-top: 1rem;
  text-align: center;
  color: #dc2626;
  font-weight: bold;
}

.bottom-aligned {
  margin-top: auto;
}

.header-container {
  position: relative;
  width: calc(100% - 2rem);
  top: 0.5rem;
  color: #f8f8f8;
  display: flex;
  z-index: 1;
  align-items: center;
  justify-content: center;
  margin: 2px auto;
  filter: drop-shadow(4px 4px #333);
}

.container-outer {
  position: relative;
  z-index: 1; /* on top of the SVG */
  display: flex;
  align-items: center;
  gap: 1rem;
  animation: busFlicker 5s steps(1, end) infinite;
}

@keyframes busFlicker {
  0% {
    opacity: 1;
  }
  33% {
    opacity: 0.8;
  }
  43% {
    opacity: 1;
  }
  66% {
    opacity: 0.8;
  }
  76% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

.header-number {
  font-family: "luminator", monospace;
  font-size: 2rem;
  line-height: 1;
  color: #fcf5e0;
  letter-spacing: 0.05em;
  margin: 0;
}

.header-title {
  font-family: "bustec", sans-serif;
  font-size: 1.25rem;
  line-height: 1;
  color: #fcf5e0;
}

/* Position the SVG absolutely behind the content */
.header-container svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: none;
}

/* Question box */

.question-container {
  width: calc(100% - 2rem);
  margin: 0 auto;
  height: auto;
  position: relative;
  position: absolute;
  bottom: 14rem;
  z-index: 1;
  left: 1rem;
}

.question-container > p {
  font-family: "Fuzzy Bubbles", sans-serif;
  color: #fcf5e0;
  margin: 18px 12px;
  font-size: 13px;
}

.question-container img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;
  filter: drop-shadow(2px 2px #3e4b53) drop-shadow(-2px 2px #3e4b53)
    drop-shadow(2px -2px #3e4b53) drop-shadow(-2px -2px #3e4b53);
}

.muni {
  bottom: 12px;
  right: 12px;
  width: 20%;
  height: auto;
  position: absolute;
}

.transit-bottom-outer {
  left: -12px;
  bottom: -42px;
  position: absolute;
}

.thunderstorm {
  width: 90%;
  left: 5%;
  margin-top: 5rem;
  margin-bottom: 5rem;
  left: 5%;
  position: relative;
  width: 90%;
  animation: alert 1.5s infinite;
  animation-timing-function: steps(1, end);
  transform-origin: center center;
}

@keyframes alert {
  0% {
    transform: translate(0px, 0px) rotate(2deg) scale(1);
  }
  25% {
    transform: translate(0px, 0px) rotate(-2deg) scale(1);
  }
  50% {
    transform: translate(0px, 0px) rotate(2deg) scale(0.9);
  }
  75% {
    transform: translate(0px, 0px) rotate(-2deg) scale(0.9);
  }
}

.question4-outer {
  aspect-ratio: 2502 / 1580;
  width: 115%;
  margin: 1rem -7.5%;
  margin-top: 0rem;
  position: relative;
}

.question4-outer > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

.waymo-inside-screen {
  animation: spookyFadeOut 5s steps(1, end);
  animation-delay: 2s;
  animation-fill-mode: forwards;
}

.window-flash {
  animation: lightningBackground 4s linear infinite;
}
.lightning1 {
  animation: lightning1 4s linear infinite;
}
.lightning2 {
  animation: lightning2 4s linear infinite;
}

@keyframes spookyFadeOut {
  0% {
    opacity: 1;
  }
  5% {
    opacity: 0.6;
  }
  7% {
    opacity: 1;
  }
  10% {
    opacity: 0.5;
  }
  12% {
    opacity: 1;
  }
  15% {
    opacity: 0.3;
  }
  17% {
    opacity: 1;
  }
  22% {
    opacity: 0.2;
  }
  25% {
    opacity: 1;
  }
  30% {
    opacity: 0.4;
  }
  33% {
    opacity: 0;
  }
  36% {
    opacity: 0.8;
  }
  40% {
    opacity: 0.2;
  }
  45% {
    opacity: 0.9;
  }
  50% {
    opacity: 0;
  }
  55% {
    opacity: 0.5;
  }
  60% {
    opacity: 0.1;
  }
  65% {
    opacity: 0.8;
  }
  70% {
    opacity: 0.05;
  }
  75% {
    opacity: 0.4;
  }
  80% {
    opacity: 0;
  }
  85% {
    opacity: 0.3;
  }
  90% {
    opacity: 0;
  }
  95% {
    opacity: 0.1;
  }
  100% {
    opacity: 0;
  }
}

/* flash at 20% and 50% */
@keyframes lightningBackground {
  0% {
    opacity: 0;
  }
  19% {
    opacity: 0;
  }
  20% {
    opacity: 0.5;
  }
  30% {
    opacity: 0;
  }
  49% {
    opacity: 0;
  }
  50% {
    opacity: 0.5;
  }
  60% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

@keyframes lightning1 {
  0% {
    opacity: 0;
  }
  19% {
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  22% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

@keyframes lightning2 {
  0% {
    opacity: 0;
  }
  49% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  52% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

.tap-in {
  height: 18rem;
  position: absolute;
  transform: rotate(-12deg);
  left: 1rem;
}

.clipper {
  height: 11rem;
  position: absolute;
  right: 3rem;
  top: 9rem;
  transform-origin: center center;
  animation: clipperJitter 2s steps(1, end) infinite;
}

@keyframes clipperJitter {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-4px, -5px) rotate(4deg);
  }
  50% {
    transform: translate(7px, -3px) rotate(-3deg);
  }
  75% {
    transform: translate(-6px, 2px) rotate(2deg);
  }
  100% {
    transform: translate(0, 0);
  }
}

.no {
  width: 60%;
  height: auto;
  position: absolute;
  left: 20%;
  top: 7rem;
}
